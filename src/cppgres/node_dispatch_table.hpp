node_dispatch(List);
node_dispatch(Alias);
node_dispatch(RangeVar);
node_dispatch(TableFunc);
node_dispatch(IntoClause);
node_dispatch(Var);
node_dispatch(Const);
node_dispatch(Param);
node_dispatch(Aggref);
node_dispatch(GroupingFunc);
node_dispatch(WindowFunc);
#if PG_MAJORVERSION_NUM >= 17
node_dispatch(WindowFuncRunCondition);
node_dispatch(MergeSupportFunc);
#endif
node_dispatch(SubscriptingRef);
node_dispatch(FuncExpr);
node_dispatch(NamedArgExpr);
node_dispatch(OpExpr);
node_dispatch(DistinctExpr);
node_dispatch(NullIfExpr);
node_dispatch(ScalarArrayOpExpr);
node_dispatch(BoolExpr);
node_dispatch(SubLink);
node_dispatch(SubPlan);
node_dispatch(AlternativeSubPlan);
node_dispatch(FieldSelect);
node_dispatch(FieldStore);
node_dispatch(RelabelType);
node_dispatch(CoerceViaIO);
node_dispatch(ArrayCoerceExpr);
node_dispatch(ConvertRowtypeExpr);
node_dispatch(CollateExpr);
node_dispatch(CaseExpr);
node_dispatch(CaseWhen);
node_dispatch(CaseTestExpr);
node_dispatch(ArrayExpr);
node_dispatch(RowExpr);
node_dispatch(RowCompareExpr);
node_dispatch(CoalesceExpr);
node_dispatch(MinMaxExpr);
node_dispatch(SQLValueFunction);
node_dispatch(XmlExpr);
#if PG_MAJORVERSION_NUM >= 16
node_dispatch(JsonFormat);
node_dispatch(JsonReturning);
node_dispatch(JsonValueExpr);
node_dispatch(JsonConstructorExpr);
node_dispatch(JsonIsPredicate);
#endif
#if PG_MAJORVERSION_NUM >= 17
node_dispatch(JsonBehavior);
node_dispatch(JsonExpr);
node_dispatch(JsonTablePath);
node_dispatch(JsonTablePathScan);
node_dispatch(JsonTableSiblingJoin);
#endif
node_dispatch(NullTest);
node_dispatch(BooleanTest);
#if PG_MAJORVERSION_NUM >= 15
node_dispatch(MergeAction);
#endif
node_dispatch(CoerceToDomain);
node_dispatch(CoerceToDomainValue);
node_dispatch(SetToDefault);
node_dispatch(CurrentOfExpr);
node_dispatch(NextValueExpr);
node_dispatch(InferenceElem);
#if PG_MAJORVERSION_NUM >= 18
node_dispatch(ReturningExpr);
#endif
node_dispatch(TargetEntry);
node_dispatch(RangeTblRef);
node_dispatch(JoinExpr);
node_dispatch(FromExpr);
node_dispatch(OnConflictExpr);
node_dispatch(Query);
node_dispatch(TypeName);
node_dispatch(ColumnRef);
node_dispatch(ParamRef);
node_dispatch(A_Expr);
node_dispatch(A_Const);
node_dispatch(TypeCast);
node_dispatch(CollateClause);
node_dispatch(RoleSpec);
node_dispatch(FuncCall);
node_dispatch(A_Star);
node_dispatch(A_Indices);
node_dispatch(A_Indirection);
node_dispatch(A_ArrayExpr);
node_dispatch(ResTarget);
node_dispatch(MultiAssignRef);
node_dispatch(SortBy);
node_dispatch(WindowDef);
node_dispatch(RangeSubselect);
node_dispatch(RangeFunction);
node_dispatch(RangeTableFunc);
node_dispatch(RangeTableFuncCol);
node_dispatch(RangeTableSample);
node_dispatch(ColumnDef);
node_dispatch(TableLikeClause);
node_dispatch(IndexElem);
node_dispatch(DefElem);
node_dispatch(LockingClause);
node_dispatch(XmlSerialize);
node_dispatch(PartitionElem);
#if PG_MAJORVERSION_NUM == 17
node_dispatch(SinglePartitionSpec);
#endif
node_dispatch(PartitionSpec);
node_dispatch(PartitionBoundSpec);
node_dispatch(PartitionRangeDatum);
node_dispatch(PartitionCmd);
node_dispatch(RangeTblEntry);
#if PG_MAJORVERSION_NUM >= 16
node_dispatch(RTEPermissionInfo);
#endif
node_dispatch(RangeTblFunction);
node_dispatch(TableSampleClause);
node_dispatch(WithCheckOption);
node_dispatch(SortGroupClause);
node_dispatch(GroupingSet);
node_dispatch(WindowClause);
node_dispatch(RowMarkClause);
node_dispatch(WithClause);
node_dispatch(InferClause);
node_dispatch(OnConflictClause);
#if PG_MAJORVERSION_NUM >= 14
node_dispatch(CTESearchClause);
node_dispatch(CTECycleClause);
#endif
node_dispatch(CommonTableExpr);
#if PG_MAJORVERSION_NUM >= 15
node_dispatch(MergeWhenClause);
#endif
#if PG_MAJORVERSION_NUM >= 18
node_dispatch(ReturningOption);
node_dispatch(ReturningClause);
#endif
node_dispatch(TriggerTransition);
#if PG_MAJORVERSION_NUM >= 16
node_dispatch(JsonOutput);
#endif
#if PG_MAJORVERSION_NUM >= 17
node_dispatch(JsonArgument);
node_dispatch(JsonFuncExpr);
node_dispatch(JsonTablePathSpec);
node_dispatch(JsonTable);
node_dispatch(JsonTableColumn);
node_dispatch(JsonKeyValue);
node_dispatch(JsonParseExpr);
node_dispatch(JsonScalarExpr);
node_dispatch(JsonSerializeExpr);
#endif
#if PG_MAJORVERSION_NUM >= 16
node_dispatch(JsonObjectConstructor);
node_dispatch(JsonArrayConstructor);
node_dispatch(JsonArrayQueryConstructor);
node_dispatch(JsonAggConstructor);
node_dispatch(JsonObjectAgg);
node_dispatch(JsonArrayAgg);
#endif
node_dispatch(RawStmt);
node_dispatch(InsertStmt);
node_dispatch(DeleteStmt);
node_dispatch(UpdateStmt);
#if PG_MAJORVERSION_NUM >= 15
node_dispatch(MergeStmt);
#endif
node_dispatch(SelectStmt);
node_dispatch(SetOperationStmt);
#if PG_MAJORVERSION_NUM >= 14
node_dispatch(ReturnStmt);
#endif
#if PG_MAJORVERSION_NUM >= 14
node_dispatch(PLAssignStmt);
#endif
node_dispatch(CreateSchemaStmt);
node_dispatch(AlterTableStmt);
node_dispatch(AlterTableCmd);
#if PG_MAJORVERSION_NUM >= 18
node_dispatch(ATAlterConstraint);
#endif
node_dispatch(ReplicaIdentityStmt);
node_dispatch(AlterCollationStmt);
node_dispatch(AlterDomainStmt);
node_dispatch(GrantStmt);
node_dispatch(ObjectWithArgs);
node_dispatch(AccessPriv);
node_dispatch(GrantRoleStmt);
node_dispatch(AlterDefaultPrivilegesStmt);
node_dispatch(CopyStmt);
node_dispatch(VariableSetStmt);
node_dispatch(VariableShowStmt);
node_dispatch(CreateStmt);
node_dispatch(Constraint);
node_dispatch(CreateTableSpaceStmt);
node_dispatch(DropTableSpaceStmt);
node_dispatch(AlterTableSpaceOptionsStmt);
node_dispatch(AlterTableMoveAllStmt);
node_dispatch(CreateExtensionStmt);
node_dispatch(AlterExtensionStmt);
node_dispatch(AlterExtensionContentsStmt);
node_dispatch(CreateFdwStmt);
node_dispatch(AlterFdwStmt);
node_dispatch(CreateForeignServerStmt);
node_dispatch(AlterForeignServerStmt);
node_dispatch(CreateForeignTableStmt);
node_dispatch(CreateUserMappingStmt);
node_dispatch(AlterUserMappingStmt);
node_dispatch(DropUserMappingStmt);
node_dispatch(ImportForeignSchemaStmt);
node_dispatch(CreatePolicyStmt);
node_dispatch(AlterPolicyStmt);
node_dispatch(CreateAmStmt);
node_dispatch(CreateTrigStmt);
node_dispatch(CreateEventTrigStmt);
node_dispatch(AlterEventTrigStmt);
node_dispatch(CreatePLangStmt);
node_dispatch(CreateRoleStmt);
node_dispatch(AlterRoleStmt);
node_dispatch(AlterRoleSetStmt);
node_dispatch(DropRoleStmt);
node_dispatch(CreateSeqStmt);
node_dispatch(AlterSeqStmt);
node_dispatch(DefineStmt);
node_dispatch(CreateDomainStmt);
node_dispatch(CreateOpClassStmt);
node_dispatch(CreateOpClassItem);
node_dispatch(CreateOpFamilyStmt);
node_dispatch(AlterOpFamilyStmt);
node_dispatch(DropStmt);
node_dispatch(TruncateStmt);
node_dispatch(CommentStmt);
node_dispatch(SecLabelStmt);
node_dispatch(DeclareCursorStmt);
node_dispatch(ClosePortalStmt);
node_dispatch(FetchStmt);
node_dispatch(IndexStmt);
node_dispatch(CreateStatsStmt);
#if PG_MAJORVERSION_NUM >= 14
node_dispatch(StatsElem);
#endif
node_dispatch(AlterStatsStmt);
node_dispatch(CreateFunctionStmt);
node_dispatch(FunctionParameter);
node_dispatch(AlterFunctionStmt);
node_dispatch(DoStmt);
node_dispatch(InlineCodeBlock);
node_dispatch(CallStmt);
node_dispatch(CallContext);
node_dispatch(RenameStmt);
node_dispatch(AlterObjectDependsStmt);
node_dispatch(AlterObjectSchemaStmt);
node_dispatch(AlterOwnerStmt);
node_dispatch(AlterOperatorStmt);
node_dispatch(AlterTypeStmt);
node_dispatch(RuleStmt);
node_dispatch(NotifyStmt);
node_dispatch(ListenStmt);
node_dispatch(UnlistenStmt);
node_dispatch(TransactionStmt);
node_dispatch(CompositeTypeStmt);
node_dispatch(CreateEnumStmt);
node_dispatch(CreateRangeStmt);
node_dispatch(AlterEnumStmt);
node_dispatch(ViewStmt);
node_dispatch(LoadStmt);
node_dispatch(CreatedbStmt);
node_dispatch(AlterDatabaseStmt);
#if PG_MAJORVERSION_NUM >= 15
node_dispatch(AlterDatabaseRefreshCollStmt);
#endif
node_dispatch(AlterDatabaseSetStmt);
node_dispatch(DropdbStmt);
node_dispatch(AlterSystemStmt);
node_dispatch(ClusterStmt);
node_dispatch(VacuumStmt);
node_dispatch(VacuumRelation);
node_dispatch(ExplainStmt);
node_dispatch(CreateTableAsStmt);
node_dispatch(RefreshMatViewStmt);
node_dispatch(CheckPointStmt);
node_dispatch(DiscardStmt);
node_dispatch(LockStmt);
node_dispatch(ConstraintsSetStmt);
node_dispatch(ReindexStmt);
node_dispatch(CreateConversionStmt);
node_dispatch(CreateCastStmt);
node_dispatch(CreateTransformStmt);
node_dispatch(PrepareStmt);
node_dispatch(ExecuteStmt);
node_dispatch(DeallocateStmt);
node_dispatch(DropOwnedStmt);
node_dispatch(ReassignOwnedStmt);
node_dispatch(AlterTSDictionaryStmt);
node_dispatch(AlterTSConfigurationStmt);
#if PG_MAJORVERSION_NUM >= 15
node_dispatch(PublicationTable);
node_dispatch(PublicationObjSpec);
#endif
node_dispatch(CreatePublicationStmt);
node_dispatch(AlterPublicationStmt);
node_dispatch(CreateSubscriptionStmt);
node_dispatch(AlterSubscriptionStmt);
node_dispatch(DropSubscriptionStmt);
node_dispatch(PlannerGlobal);
node_dispatch(PlannerInfo);
node_dispatch(RelOptInfo);
node_dispatch(IndexOptInfo);
node_dispatch(ForeignKeyOptInfo);
node_dispatch(StatisticExtInfo);
#if PG_MAJORVERSION_NUM >= 16
node_dispatch(JoinDomain);
#endif
node_dispatch(EquivalenceClass);
node_dispatch(EquivalenceMember);
node_dispatch(PathKey);
#if PG_MAJORVERSION_NUM >= 17
node_dispatch(GroupByOrdering);
#endif
node_dispatch(PathTarget);
node_dispatch(ParamPathInfo);
node_dispatch(Path);
node_dispatch(IndexPath);
node_dispatch(IndexClause);
node_dispatch(BitmapHeapPath);
node_dispatch(BitmapAndPath);
node_dispatch(BitmapOrPath);
node_dispatch(TidPath);
#if PG_MAJORVERSION_NUM >= 14
node_dispatch(TidRangePath);
#endif
node_dispatch(SubqueryScanPath);
node_dispatch(ForeignPath);
node_dispatch(CustomPath);
node_dispatch(AppendPath);
node_dispatch(MergeAppendPath);
node_dispatch(GroupResultPath);
node_dispatch(MaterialPath);
#if PG_MAJORVERSION_NUM >= 14
node_dispatch(MemoizePath);
#endif
node_dispatch(UniquePath);
node_dispatch(GatherPath);
node_dispatch(GatherMergePath);
node_dispatch(NestPath);
node_dispatch(MergePath);
node_dispatch(HashPath);
node_dispatch(ProjectionPath);
node_dispatch(ProjectSetPath);
node_dispatch(SortPath);
node_dispatch(IncrementalSortPath);
node_dispatch(GroupPath);
#if PG_MAJORVERSION_NUM < 19
node_dispatch(UpperUniquePath);
#endif
node_dispatch(AggPath);
node_dispatch(GroupingSetData);
node_dispatch(RollupData);
node_dispatch(GroupingSetsPath);
node_dispatch(MinMaxAggPath);
node_dispatch(WindowAggPath);
node_dispatch(SetOpPath);
node_dispatch(RecursiveUnionPath);
node_dispatch(LockRowsPath);
node_dispatch(ModifyTablePath);
node_dispatch(LimitPath);
node_dispatch(RestrictInfo);
node_dispatch(PlaceHolderVar);
node_dispatch(SpecialJoinInfo);
#if PG_MAJORVERSION_NUM >= 16
node_dispatch(OuterJoinClauseInfo);
#endif
node_dispatch(AppendRelInfo);
#if PG_MAJORVERSION_NUM >= 14
node_dispatch(RowIdentityVarInfo);
#endif
node_dispatch(PlaceHolderInfo);
node_dispatch(MinMaxAggInfo);
node_dispatch(PlannerParamItem);
#if PG_MAJORVERSION_NUM >= 16
node_dispatch(AggInfo);
node_dispatch(AggTransInfo);
#endif
#if PG_MAJORVERSION_NUM >= 18
node_dispatch(UniqueRelInfo);
#endif
node_dispatch(PlannedStmt);
node_dispatch(Result);
node_dispatch(ProjectSet);
node_dispatch(ModifyTable);
node_dispatch(Append);
node_dispatch(MergeAppend);
node_dispatch(RecursiveUnion);
node_dispatch(BitmapAnd);
node_dispatch(BitmapOr);
node_dispatch(SeqScan);
node_dispatch(SampleScan);
node_dispatch(IndexScan);
node_dispatch(IndexOnlyScan);
node_dispatch(BitmapIndexScan);
node_dispatch(BitmapHeapScan);
node_dispatch(TidScan);
#if PG_MAJORVERSION_NUM >= 14
node_dispatch(TidRangeScan);
#endif
node_dispatch(SubqueryScan);
node_dispatch(FunctionScan);
node_dispatch(ValuesScan);
node_dispatch(TableFuncScan);
node_dispatch(CteScan);
node_dispatch(NamedTuplestoreScan);
node_dispatch(WorkTableScan);
node_dispatch(ForeignScan);
node_dispatch(CustomScan);
node_dispatch(NestLoop);
node_dispatch(NestLoopParam);
node_dispatch(MergeJoin);
node_dispatch(HashJoin);
node_dispatch(Material);
#if PG_MAJORVERSION_NUM >= 14
node_dispatch(Memoize);
#endif
node_dispatch(Sort);
node_dispatch(IncrementalSort);
node_dispatch(Group);
node_dispatch(Agg);
node_dispatch(WindowAgg);
node_dispatch(Unique);
node_dispatch(Gather);
node_dispatch(GatherMerge);
node_dispatch(Hash);
node_dispatch(SetOp);
node_dispatch(LockRows);
node_dispatch(Limit);
node_dispatch(PlanRowMark);
node_dispatch(PartitionPruneInfo);
node_dispatch(PartitionedRelPruneInfo);
node_dispatch(PartitionPruneStepOp);
node_dispatch(PartitionPruneStepCombine);
node_dispatch(PlanInvalItem);
node_dispatch(ExprState);
node_dispatch(IndexInfo);
node_dispatch(ExprContext);
node_dispatch(ReturnSetInfo);
node_dispatch(ProjectionInfo);
node_dispatch(JunkFilter);
node_dispatch(OnConflictSetState);
#if PG_MAJORVERSION_NUM >= 15
node_dispatch(MergeActionState);
#endif
node_dispatch(ResultRelInfo);
node_dispatch(EState);
node_dispatch(WindowFuncExprState);
node_dispatch(SetExprState);
node_dispatch(SubPlanState);
node_dispatch(DomainConstraintState);
node_dispatch(ResultState);
node_dispatch(ProjectSetState);
node_dispatch(ModifyTableState);
node_dispatch(AppendState);
node_dispatch(MergeAppendState);
node_dispatch(RecursiveUnionState);
node_dispatch(BitmapAndState);
node_dispatch(BitmapOrState);
node_dispatch(ScanState);
node_dispatch(SeqScanState);
node_dispatch(SampleScanState);
node_dispatch(IndexScanState);
node_dispatch(IndexOnlyScanState);
node_dispatch(BitmapIndexScanState);
node_dispatch(BitmapHeapScanState);
node_dispatch(TidScanState);
#if PG_MAJORVERSION_NUM >= 14
node_dispatch(TidRangeScanState);
#endif
node_dispatch(SubqueryScanState);
node_dispatch(FunctionScanState);
node_dispatch(ValuesScanState);
node_dispatch(TableFuncScanState);
node_dispatch(CteScanState);
node_dispatch(NamedTuplestoreScanState);
node_dispatch(WorkTableScanState);
node_dispatch(ForeignScanState);
node_dispatch(CustomScanState);
node_dispatch(JoinState);
node_dispatch(NestLoopState);
node_dispatch(MergeJoinState);
node_dispatch(HashJoinState);
node_dispatch(MaterialState);
#if PG_MAJORVERSION_NUM >= 14
node_dispatch(MemoizeState);
#endif
node_dispatch(SortState);
node_dispatch(IncrementalSortState);
node_dispatch(GroupState);
node_dispatch(AggState);
node_dispatch(WindowAggState);
node_dispatch(UniqueState);
node_dispatch(GatherState);
node_dispatch(GatherMergeState);
node_dispatch(HashState);
node_dispatch(SetOpState);
node_dispatch(LockRowsState);
node_dispatch(LimitState);
node_dispatch(IndexAmRoutine);
node_dispatch(TableAmRoutine);
node_dispatch(TsmRoutine);
node_dispatch(EventTriggerData);
node_dispatch(TriggerData);
node_dispatch(TupleTableSlot);
node_dispatch(FdwRoutine);
#if PG_MAJORVERSION_NUM >= 16
node_dispatch(Bitmapset);
#endif
node_dispatch(ExtensibleNode);
#if PG_MAJORVERSION_NUM >= 16
node_dispatch(ErrorSaveContext);
#endif
node_dispatch(IdentifySystemCmd);
node_dispatch(BaseBackupCmd);
node_dispatch(CreateReplicationSlotCmd);
node_dispatch(DropReplicationSlotCmd);
#if PG_MAJORVERSION_NUM >= 17
node_dispatch(AlterReplicationSlotCmd);
#endif
node_dispatch(StartReplicationCmd);
#if PG_MAJORVERSION_NUM >= 15
node_dispatch(ReadReplicationSlotCmd);
#endif
node_dispatch(TimeLineHistoryCmd);
#if PG_MAJORVERSION_NUM >= 17
node_dispatch(UploadManifestCmd);
#endif
node_dispatch(SupportRequestSimplify);
node_dispatch(SupportRequestSelectivity);
node_dispatch(SupportRequestCost);
node_dispatch(SupportRequestRows);
node_dispatch(SupportRequestIndexCondition);
#if PG_MAJORVERSION_NUM >= 15
node_dispatch(SupportRequestWFuncMonotonic);
#endif
#if PG_MAJORVERSION_NUM >= 17
node_dispatch(SupportRequestOptimizeWindowClause);
#endif
#if PG_MAJORVERSION_NUM >= 18
node_dispatch(SupportRequestModifyInPlace);
#endif
#if PG_MAJORVERSION_NUM >= 15
node_dispatch(Integer);
node_dispatch(Float);
node_dispatch(Boolean);
node_dispatch(String);
node_dispatch(BitString);
#endif
node_dispatch(ForeignKeyCacheInfo);
